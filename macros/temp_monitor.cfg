# Monitoring loop. Begins at Klipper start.
# todo tune naming of variables and macros, comments
[delayed_gcode CHECK_ALL_FANS]
initial_duration: 5 #without this delay there is chance to end in error / hypothesis
gcode:
    TEMPS_CHECK
    UPDATE_DELAYED_GCODE ID=CHECK_ALL_FANS DURATION=10

[gcode_macro TEMPS_CHECK]
variable_active: 0
gcode:
    #{% set head_temp_on = 50|float %} #handled in dummy_hotend_fan
    #{% set temp_head = printer[printer.toolhead.extruder].temperature|float %} #handled in dummy_hotend_fan
    {% set drivers_temp_on = 33|float %} #max drivers temperature by HALT handled in [temperature_sensor drivers_temp] later rework to pause??
    {% set drivers_temp_off = 28|float %} ##hysteresis for driver temps
    {% set temp_drivers = printer['temperature_sensor drivers_temp'].temperature|float %}
    {% set fan_controller_speed = printer['controller_fan dummy_motors_fan'].speed|float  %}
    {% set fan_hotend_speed = printer['heater_fan dummy_hotend_fan'].speed|float  %}

    #debug print into console
    #{action_respond_info("Active cnt: %.1f, Drivers Temp: %.1f, Fan_controller: %.1f, Fan_hotend: %.1f" % (active, temp_drivers, fan_controller_speed, fan_hotend_speed))}

    {% if ((temp_drivers >= drivers_temp_on) or (fan_controller_speed>0) or (fan_hotend_speed>0)) and (active==0) %}
        SET_GCODE_VARIABLE MACRO=TEMPS_CHECK VARIABLE=active VALUE=1
        WATER_COOLING_ON
    {% elif (temp_drivers <= drivers_temp_off) and (fan_controller_speed==0) and (fan_hotend_speed==0) and (active==1) %} #hysteresis for driver temps     
        SET_GCODE_VARIABLE MACRO=TEMPS_CHECK VARIABLE=active VALUE=0
        WATER_COOLING_OFF
    {% else %}
    #M118 Nothing from above #debug 
    {% endif %}
      
[gcode_macro WATER_COOLING_ON]
gcode:
  SET_FAN_SPEED FAN=water_pump SPEED=0.52
  SET_FAN_SPEED FAN=radiator_fan SPEED=1
  M118 START Watercooling                  #debug print
  
[gcode_macro WATER_COOLING_OFF]
gcode:
  SET_FAN_SPEED FAN=water_pump SPEED=0
  SET_FAN_SPEED FAN=radiator_fan SPEED=0
  M118 END Watercooling                    #debug print

[fan_generic water_pump] 
# This is if you connect your driver fan to Super8 
#or if you want to add fan to the Super8. Other wise connect them in the driver fan ports
#stepper: stepper_x
#stepper: stepper_x1
#stepper: stepper_y
#stepper: stepper_y1
#heater: extruder
pin: PB1
max_power: 0.6
shutdown_speed: 0
kick_start_time: 0.5
off_below: 0.45 #for 0.6 max power
#idle_timeout: 60
#fan_speed: 0.4
#tachometer_pin: PF10  #^PG9
#tachometer_ppr: 2

[fan_generic radiator_fan]
##  RSCS Fans - In FAN1 Positon
pin: PD14
#cycle_time: 0.001
#hardware_pwm: false
max_power: 1
shutdown_speed: 0
kick_start_time: 0.1
#off_below: 0.6

[controller_fan dummy_motors_fan]
##  radiator fans
pin: PD6
#heater: extruder
heater: heater_bed
stepper: stepper_x
stepper: stepper_x1
stepper: stepper_y
stepper: stepper_y1
#cycle_time: 0.001
#hardware_pwm: false
max_power: 1
shutdown_speed: 0
kick_start_time: 0.5
idle_timeout: 0
#off_below: 0.6

[heater_fan dummy_hotend_fan]
###	Hotend Fan - FAN0 Connector
### in case of a watercooler that is 24V use a Heater Pin like PF7 Heat3 for a larger mosfet that can handle more amps.
pin: PA8 #pump
max_power: 1
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
